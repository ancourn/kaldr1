{{- if .Values.frontend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: {{ .Values.global.namespace }}
  labels:
    app: frontend
    {{- include "kaldrix.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "kaldrix.annotations" . | nindent 4 }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  {{- if .Values.zeroDowntime.enabled }}
  strategy:
    type: {{ .Values.zeroDowntime.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxUnavailable }}
  {{- end }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        {{- include "kaldrix.labels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "kaldrix.annotations" . | nindent 8 }}
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.security.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.affinity }}
      affinity:
        {{- toYaml .Values.frontend.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.zeroDowntime.enabled }}
      terminationGracePeriodSeconds: {{ .Values.zeroDowntime.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
      - name: frontend
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        {{- if .Values.security.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.security.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: {{ include "kaldrix.fullname" . }}-config
              key: NODE_ENV
        - name: NEXT_PUBLIC_API_URL
          value: {{ .Values.frontend.env.NEXT_PUBLIC_API_URL | quote }}
        - name: NEXT_PUBLIC_WS_URL
          value: {{ .Values.frontend.env.NEXT_PUBLIC_WS_URL | quote }}
        ports:
        - containerPort: {{ .Values.frontend.service.port }}
          name: http
        {{- if .Values.healthChecks.enabled }}
        {{- with .Values.healthChecks.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.frontend.service.port }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- with .Values.healthChecks.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.frontend.service.port }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.frontend.resources | nindent 10 }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{- if .Values.backend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: {{ .Values.global.namespace }}
  labels:
    app: backend
    {{- include "kaldrix.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "kaldrix.annotations" . | nindent 4 }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  {{- if .Values.zeroDowntime.enabled }}
  strategy:
    type: {{ .Values.zeroDowntime.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxUnavailable }}
  {{- end }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        {{- include "kaldrix.labels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "kaldrix.annotations" . | nindent 8 }}
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.security.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.affinity }}
      affinity:
        {{- toYaml .Values.backend.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.zeroDowntime.enabled }}
      terminationGracePeriodSeconds: {{ .Values.zeroDowntime.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
      - name: backend
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        {{- if .Values.security.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.security.containerSecurityContext | nindent 10 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "kaldrix.fullname" . }}-config
        env:
        - name: DATABASE_URL
          value: "postgresql://kaldrix:$(DATABASE_PASSWORD)@postgres-service:5432/{{ if .Values.postgresql.enabled }}{{ .Values.postgresql.global.postgresql.auth.database }}{{ else }}kaldrix_prod{{ end }}"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis-service:6379"
        - name: BLOCKCHAIN_NODE_URL
          value: "http://blockchain-service:8545"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: JWT_SECRET
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: DATABASE_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: REDIS_PASSWORD
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: SENTRY_DSN
        ports:
        - containerPort: {{ .Values.backend.service.ports.http }}
          name: http
        - containerPort: {{ .Values.backend.service.ports.websocket }}
          name: websocket
        {{- if .Values.healthChecks.enabled }}
        {{- with .Values.healthChecks.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.service.ports.http }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- with .Values.healthChecks.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.service.ports.http }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{- if .Values.blockchain.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-deployment
  namespace: {{ .Values.global.namespace }}
  labels:
    app: blockchain-node
    {{- include "kaldrix.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "kaldrix.annotations" . | nindent 4 }}
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.blockchain.replicaCount }}
  {{- if .Values.zeroDowntime.enabled }}
  strategy:
    type: {{ .Values.zeroDowntime.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.zeroDowntime.strategy.rollingUpdate.maxUnavailable }}
  {{- end }}
  selector:
    matchLabels:
      app: blockchain-node
  template:
    metadata:
      labels:
        app: blockchain-node
        {{- include "kaldrix.labels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "kaldrix.annotations" . | nindent 8 }}
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.security.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.blockchain.affinity }}
      affinity:
        {{- toYaml .Values.blockchain.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.zeroDowntime.enabled }}
      terminationGracePeriodSeconds: {{ .Values.zeroDowntime.terminationGracePeriodSeconds }}
      {{- end }}
      volumes:
      - name: kaldrix-data
        persistentVolumeClaim:
          claimName: {{ include "kaldrix.fullname" . }}-data-pvc
      containers:
      - name: blockchain-node
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.blockchain.image.repository }}:{{ .Values.blockchain.image.tag }}"
        imagePullPolicy: {{ .Values.blockchain.image.pullPolicy }}
        {{- if .Values.security.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.security.containerSecurityContext | nindent 10 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "kaldrix.fullname" . }}-config
        env:
        - name: DATABASE_URL
          value: "postgresql://kaldrix:$(DATABASE_PASSWORD)@postgres-service:5432/{{ if .Values.postgresql.enabled }}{{ .Values.postgresql.global.postgresql.auth.database }}{{ else }}kaldrix_prod{{ end }}"
        - name: VALIDATOR_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: VALIDATOR_PRIVATE_KEY
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "kaldrix.fullname" . }}-secrets
              key: DATABASE_PASSWORD
        ports:
        - containerPort: {{ .Values.blockchain.service.ports.rpc }}
          name: rpc
        - containerPort: {{ .Values.blockchain.service.ports.wsRpc }}
          name: ws-rpc
        - containerPort: {{ .Values.blockchain.service.ports.p2p }}
          name: p2p
        volumeMounts:
        - name: kaldrix-data
          mountPath: /app/data
        {{- if .Values.healthChecks.enabled }}
        {{- with .Values.healthChecks.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.blockchain.service.ports.rpc }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- with .Values.healthChecks.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.blockchain.service.ports.rpc }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.blockchain.resources | nindent 10 }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}