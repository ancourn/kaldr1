version: '3.8'

services:
  # Quantum-Proof DAG Blockchain Node
  blockchain-node:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quantum-dag-node
    restart: unless-stopped
    environment:
      - RUST_LOG=info
      - DATABASE_URL=sqlite:///data/blockchain.db
      - IDENTITY_STORAGE_PATH=/data/identity
      - BACKUP_DIR=/data/backups
    volumes:
      - ./data:/data
      - ./logs:/app/logs
    ports:
      - "8080:8080"
    networks:
      - blockchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # NGINX Reverse Proxy (Option 1)
  nginx:
    image: nginx:alpine
    container_name: quantum-dag-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - blockchain-node
    networks:
      - blockchain-network
    profiles:
      - nginx

  # Caddy Reverse Proxy (Option 2)
  caddy:
    image: caddy:2-alpine
    container_name: quantum-dag-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019" # Admin interface
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./logs/caddy:/var/log/caddy
    depends_on:
      - blockchain-node
    networks:
      - blockchain-network
    profiles:
      - caddy

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: quantum-dag-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    profiles:
      - certbot

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: quantum-dag-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - blockchain-network
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: quantum-dag-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_change_me
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana_data:/var/lib/grafana
      - ./grafana-dashboard.json:/etc/grafana/provisioning/dashboards/quantum-dag-dashboard.json:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - blockchain-network
    profiles:
      - monitoring

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: quantum-dag-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - blockchain-network
    profiles:
      - monitoring

networks:
  blockchain-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: