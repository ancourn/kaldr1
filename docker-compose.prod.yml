version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kaldrix-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
    volumes:
      - ./public:/app/public:ro
    networks:
      - kaldrix-network
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kaldrix.rule=Host(`kaldrix.io`) || Host(`www.kaldrix.io`)"
      - "traefik.http.routers.kaldrix.entrypoints=websecure"
      - "traefik.http.routers.kaldrix.tls.certresolver=myresolver"
      - "traefik.http.services.kaldrix.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.kaldrix-headers.headers.customresponseheaders.Server=KALDRIX"
      - "traefik.http.middlewares.kaldrix-compress.compress=true"
      - "traefik.http.routers.kaldrix.middlewares=kaldrix-headers,kaldrix-compress"

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kaldrix-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - kaldrix-network
    sysctls:
      - net.core.somaxconn=1024

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: kaldrix-traefik-prod
    restart: unless-stopped
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt_data:/letsencrypt"
      - "traefik_logs:/var/log/traefik"
    networks:
      - kaldrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.kaldrix.io`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}"

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: kaldrix-prometheus-prod
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - kaldrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.kaldrix.io`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=traefik-auth"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: kaldrix-grafana-prod
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - kaldrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.kaldrix.io`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.middlewares=traefik-auth"

  # Node Exporter for system metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: kaldrix-node-exporter-prod
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - kaldrix-network

volumes:
  redis_data:
    driver: local
  letsencrypt_data:
    driver: local
  traefik_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  kaldrix-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16