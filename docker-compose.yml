version: '3.8'

services:
  # Blockchain Backend
  blockchain-backend:
    build:
      context: .
      dockerfile: blockchain-backend/Dockerfile
    container_name: quantum-dag-backend
    ports:
      - "8080:8080"
      - "8999:8999"
    volumes:
      - blockchain-data:/app/data
    environment:
      - RUST_LOG=info
      - BLOCKCHAIN_PATH=/app/data
    networks:
      - blockchain-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  blockchain-frontend:
    build:
      context: .
      dockerfile: blockchain-frontend/Dockerfile
    container_name: quantum-dag-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://blockchain-backend:8080
      - NEXT_PUBLIC_WS_URL=ws://blockchain-backend:8080/ws
      - NODE_ENV=production
    depends_on:
      blockchain-backend:
        condition: service_healthy
    networks:
      - blockchain-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: quantum-dag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - blockchain-frontend
      - blockchain-backend
    networks:
      - blockchain-network
    restart: unless-stopped

volumes:
  blockchain-data:
    driver: local

networks:
  blockchain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16