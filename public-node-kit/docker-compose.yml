version: '3.8'

services:
  kaldrix-node:
    image: kaldrix/node:latest
    container_name: kaldrix-node-${NODE_NAME:-default}
    restart: unless-stopped
    ports:
      - "8545:8545"  # JSON-RPC
      - "8546:8546"  # WebSocket
      - "30303:30303"  # P2P
      - "30304:30304/udp"  # P2P UDP
    environment:
      - NODE_NAME=${NODE_NAME:-kaldrix-testnet-node}
      - NETWORK_ID=${NETWORK_ID:-1337}
      - CHAIN_ID=${CHAIN_ID:-1337}
      - STAKING_AMOUNT=${STAKING_AMOUNT:-1000}
      - API_KEY=${API_KEY:-your-api-key-here}
      - BOOTNODES=${BOOTNODES:-}
      - ENABLE_METRICS=true
      - METRICS_PORT=${METRICS_PORT:-9090}
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    networks:
      - kaldrix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3

  metrics-collector:
    image: prom/prometheus:latest
    container_name: kaldrix-metrics
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - kaldrix-network

  grafana:
    image: grafana/grafana:latest
    container_name: kaldrix-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - kaldrix-network

  api-gateway:
    image: nginx:alpine
    container_name: kaldrix-gateway
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - kaldrix-network
    depends_on:
      - kaldrix-node

networks:
  kaldrix-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: